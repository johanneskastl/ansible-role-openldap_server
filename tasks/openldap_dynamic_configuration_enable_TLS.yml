---
# openldap_server/tasks/openldap_dynamic_configuration_enable_TLS.yml

#
# enable TLS by setting
# - olcTLSCertificateFile
# - olcTLSCertificateKeyFile
# - olcTLSCaCertificateFile
#

#
# Create the directory for the LDIF files in case it is missing
#
- name: 'Create directory /root/OpenLDAP_configuration_via_ansible/'
  file:
    path: '/root/OpenLDAP_configuration_via_ansible/'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0700'

#
# Pre-flight checks
#
- fail:
    msg: 'path_to_TLS_certificate and TLS_certificate_filename are both undefined'
  when: 'path_to_TLS_certificate is undefined and TLS_certificate_filename is undefined'

- fail:
    msg: 'path_to_TLS_key and TLS_key_filename are both undefined'
  when: 'path_to_TLS_key is undefined and TLS_key_filename is undefined'

- fail:
    msg: 'path_to_TLS_ca_certificate and TLS_ca_certificate_filename are both undefined'
  when: 'path_to_TLS_ca_certificate is undefined and TLS_ca_certificate_filename is undefined'

#
# define variables for full paths to TLS files
#
- name: 'Build full path to TLS files'
  set_fact:
    path_to_TLS_certificate: "{{ path_to_openldap_etc_directory }}certs/{{ TLS_certificate_filename }}"
  when: 'path_to_TLS_certificate is undefined'

- name: 'Build full path to TLS files'
  set_fact:
    path_to_TLS_key: "{{ path_to_openldap_etc_directory }}certs/{{ TLS_key_filename }}"
  when: 'path_to_TLS_key is undefined'

- name: 'Build full path to TLS files'
  set_fact:
    path_to_TLS_ca_certificate: "{{ path_to_openldap_etc_directory }}certs/{{ TLS_ca_certificate_filename }}"
  when: 'path_to_TLS_ca_certificate is undefined'

#
# create LDIF files and apply them, if needed
#
- name: 'Create LDIF file to enable TLS'
  template:
    src: "{{ item }}.j2"
    dest: "/root/OpenLDAP_configuration_via_ansible/{{ item }}"
    owner: 'root'
    group: 'root'
    mode: '0600'
  loop:
    - 'enable_TLS_cacertificate.ldif'
    - 'enable_TLS_certificate.ldif'
    - 'enable_TLS_key.ldif'
    - 'enable_TLS.ldif'

- name: 'Check if olcTLS is present in cn=config.ldif'
  command:
    cmd: "grep '^olcTLS' {{ path_to_openldap_etc_directory }}slapd.d/cn=config.ldif"
  register: grep_for_olcTLS_in_config
  check_mode: 'false'
  changed_when: 'false'
  failed_when: 'grep_for_olcTLS_in_config.rc != 0 and grep_for_olcTLS_in_config.stdout != ""'

- name: 'Add all TLS setting in one go via ldapmodify'
  command:
    cmd: 'ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /root/OpenLDAP_configuration_via_ansible/enable_TLS.ldif'
  when:
    - 'grep_for_olcTLS_in_config.stdout == ""'
  tags:
    - 'configuration'

- name: 'Replace single TLS via ldapmodify'
  command:
    cmd: "ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /root/OpenLDAP_configuration_via_ansible/{{ item.file }}"
  loop:
    - name: "{{ ('olcTLSCertificateFile: ' + path_to_TLS_certificate) | truncate(75, True, '', 0) }}"
      file: 'enable_TLS_certificate.ldif'
    - name: "{{ ('olcTLSCertificateKeyFile: ' + path_to_TLS_key) | truncate(75, True, '', 0) }}"
      file: 'enable_TLS_key.ldif'
    - name: "{{ ('olcTLSCACertificateFile: ' + path_to_TLS_ca_certificate) | truncate(75, True, '', 0) }}"
      file: 'enable_TLS_cacertificate.ldif'
  when:
    - 'grep_for_olcTLS_in_config.stdout != ""'
    - 'item.name not in grep_for_olcTLS_in_config.stdout'
  tags:
    - 'configuration'
